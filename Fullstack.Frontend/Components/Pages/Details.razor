@page "/details/{Id:int?}"
@using Fullstack.Data.Models
@inject HttpClient Client

<PageTitle>details</PageTitle>

@if (_blogPosts is not null)
{
    <div class="d-flex flex-column align-items-center text-light">
        <div class="text-start card card-block post-card my-4 corner-rounding post-details">
            <h2 class="m-lg-3 mt-2">@_blogPosts.Title</h2>
            <h6 class="m-lg-3 mt-2">Created: @_blogPosts.Created</h6>
            @if (_blogPosts.Edited)
            {
                <h6 class="m-lg-3">Edited: @_blogPosts.EditedTime</h6>
            }
            <hr class="bg-light"/>
            <p class="m-lg-3" style="white-space: pre-wrap;">@_blogPosts.Content</p>

            <div>
                <button @onclick="() => DeletePost(_blogPosts.Id)" class="button corner-rounding">Delete</button>
                <a href="edit/@_blogPosts.Id" class="button">Edit</a>
            </div>
        </div>
    </div>
}

@if (Deleted)
{
    <h1>Deleted</h1>
}

@code {
    [Parameter]
    public int? Id { get; set; }
    private bool Deleted { get; set; }
    
    BlogPost? _blogPosts;
    
    protected override async Task OnInitializedAsync()
    {
        HttpResponseMessage response = await Client.GetAsync($"http://localhost:5179/api/Blog/{Id}");

        if (response.IsSuccessStatusCode)
        {
            _blogPosts = await response.Content.ReadAsAsync<BlogPost?>();
        }
    }

    private async Task DeletePost(int id)
    {
        HttpResponseMessage response = await Client.DeleteAsync($"http://localhost:5179/api/Blog/{id}");

        if (response.IsSuccessStatusCode)
        {
            Deleted = true;
        }
    }
}